#include<stdio.h>
/*
一个数的约数：不大于其本身且可以被整除的数
例如 12 的约数：1 2 3 4 6 12 
	 18 的约数：1 2 3 6 9 18
那么6就是12和18的最大公约数
*/ 
int main(){	
	//辗转相除法(性能高) 求最大公约数  
	/*
	m=12	n=18	例如有这两个数字
	12 % 18  =12    求出 m % n 的数 j
	m=18	n=12 	将原先的 n 赋值给 m，求出的 j 赋值给 n 
	18 % 12  =6     再重复求出 m % n 的数 j
	m=12	n=6 	将上次的 n 赋值给 m，求出的 j 赋值给 n 
	12 % 6   =0     再进行取余，直到没有余数
	那么此时的 n(6) 就是最大公约数 	
	*/
	int m,n,j;
	scanf("%d %d",&m,&n);
	//先找出第一次的余数
	j=m%n; 
	//只要一直有余数则一直循环
	while(j!=0){
		m=n;
		n=j;
		j=m%n;
	} 	
	printf("最大公约数是：%d",n);
//辗转相除法只能用来求最大公约数
//求最小公倍数用公式 m*n/n 时 m*n 中的 m n 为输入时的原值，而辗转相除法执行时就已经将 m n 的值改变了
//所以不能用来求最小公倍数
	return 0;

} 

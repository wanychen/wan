#include<stdio.h>
int main(){
//%nd，占n个字符	
//n>0，左边补空格		n<0，右边补空格 
printf("%5d\n",-12); //  -12 
printf("%-5d\n",12); //12 
printf("%5d\n",12345);//12345 
printf("%5d\n",1234567);//1234567
//若输出的数位数>n，则按实际位数输出 
printf("%c\n",'\101');//A 
printf("%c\n",'\x41');//A 
//输出的字符为8或16进制，则转10找到对应字符
/*
%m.ns   m个字符，n：字符串的前n个内容		
m>0，左边补空格		m<0，右边补空格  
*/
printf("%s\n","hello");//hello,没有m.n原样输出 
printf("%.3s\n","hello");//hle
printf("%8.3s\n","hello");//     hel
printf("%-8.3s\n","hello");//hel
/*
%m.nf	m个字符，小数点后保留n位(四舍五入)
m>0，左边补空格		m<0，右边补空格
*/
printf("%f\n",3.1415926f);//3.141593
printf("%.3f\n",3.1415926f);//3.142
printf("%8.3f\n",3.1415926f);//   3.142
printf("%-8.3f\n",3.1415926f);//3.142
/*
%e 以指数形式表示实型(小数点前只有1个非0数) 
%m.ne   m个字符，小数点后保留n位(四舍五入)
m>0，左边补空格		m<0，右边补空格
*/
printf("%e\n",314.15926);//3.141593e+002 
//乘10的-2次幂满足小数点前只有1个非0数，用e+002表示 
printf("%e\n",314159.26);//3.141593e+005  
//乘10的-5次满足，e+005
printf("%6.2e\n",314159.26);//3.14e+005
printf("%e\n",0.031415926);//3.141593e-002
//乘10的2次满足，e-002
//%e中e+是将小数点前移， e-是将小数点后移

//整型有 8 10 16 三种进制的表示形式
//%o	将10进制整数以8进制输出 
//%x	将10进制整数以16进制输出 
//%#o	带前缀的8进制
//%#x	带前缀的16进制 
printf("%d %o %x\n",100,100,100);//100 144 64
printf("%d %o %x\n",0100,0100,0100);
//64 100 40		在整数前+0是8进制数 
printf("%#o\n",12);//014 
printf("%#x\n",12);//0xc 
}
